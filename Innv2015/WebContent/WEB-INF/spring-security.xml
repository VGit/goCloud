<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.1.xsd">


<!-- Authentication & Authorization-->
  	<security:http pattern="/assets/**" security="none" />
	<security:http pattern="/bootstrap/**" security="none" />
	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/images/**" security="none" />
	<security:http pattern="/js/**" security="none" />

	<security:http auto-config="true" use-expressions="true"
	access-denied-page="/auth/denied">

	<security:intercept-url pattern="/auth/login"  access="permitAll" />
<!-- 	<security:form-login login-page="/auth/login"
		always-use-default-target="false" authentication-success-handler-ref="sfsAuthenticationSuccessHandler"
		authentication-failure-url="/auth/login?error=true"
		default-target-url="/login-flow" /> -->

	<security:logout invalidate-session="true"
		logout-success-url="/auth/login" logout-url="/auth/logout" /><!-- <security:access-denied-handler 
		error-page="/accessDenied.jsp"/> -->
	<security:session-management
		session-fixation-protection="newSession" />
	<security:session-management
		invalid-session-url="/auth/login" />


	</security:http>
	
	<!-- <security:authentication-manager>
       <security:authentication-provider ref="userAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="userAuthenticationProvider"
		class="com.crgt.innov2015.security.UserAuthenticationProvider"/>

	Use a Md5 encoder since the user's passwords are stored as Md5 in the 
		database
	<bean
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
		id="passwordEncoder" /> -->

	
</beans>